"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var PapaParseService = (function () {
    function PapaParseService() {
        this.papa = require('papaparse/papaparse.min.js');
        /**
         * An array of characters that are not allowed as delimiters.
         */
        this.BAD_DELIMITERS = this.papa.BAD_DELIMITERS;
        /**
         * The true delimiter. Invisible. ASCII code 30.
         * Should be doing the job we strangely rely upon commas and tabs for.
         */
        this.RECORD_SEP = this.papa.RECORD_SEP;
        /**
         * Also sometimes used as a delimiting character. ASCII code 31.
         */
        this.UNIT_SEP = this.papa.UNIT_SEP;
        /**
         * Whether or not the browser supports HTML5 Web Workers.
         * If false, worker: true will have no effect.
         */
        this.WORKERS_SUPPORTED = this.papa.WORKERS_SUPPORTED;
    }
    /**
     * Parse CSV to an array
     * @param csv
     * @param config
     */
    PapaParseService.prototype.parse = function (csv, config) {
        return this.papa.parse(csv, config);
    };
    /**
     * Convert an array into CSV
     * @param data
     * @param config
     * @returns {string}
     */
    PapaParseService.prototype.unparse = function (data, config) {
        return this.papa.unparse(data, config);
    };
    /**
     * Set the size in bytes of each file chunk.
     * Used when streaming files obtained from the DOM that
     * exist on the local computer. Default 10 MB.
     * @param value {number}
     */
    PapaParseService.prototype.setLocalChunkSize = function (value) {
        this.papa.LocalChunkSize = value;
    };
    /**
     * Set the size in bytes of each remote file chunk.
     * Used when streaming remote files. Default 5 MB.
     * @param value {number}
     */
    PapaParseService.prototype.setRemoteChunkSize = function (value) {
        this.papa.RemoteChunkSize = value;
    };
    /**
     * Set the delimiter used when it is left unspecified and cannot be detected automatically. Default is comma.
     * @param value {string}
     */
    PapaParseService.prototype.setDefaultDelimiter = function (value) {
        this.papa.DefaultDelimiter = value;
    };
    return PapaParseService;
}());
PapaParseService.decorators = [
    { type: core_1.Injectable },
];
/** @nocollapse */
PapaParseService.ctorParameters = function () { return []; };
exports.PapaParseService = PapaParseService;
//# sourceMappingURL=papaparse.service.js.map