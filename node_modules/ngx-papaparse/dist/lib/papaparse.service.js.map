{"version":3,"sources":["../../src/lib/papaparse.service.ts"],"names":[],"mappings":";;AAAA,sCAA2C;AAK3C;IAAA;QACY,SAAI,GAAQ,OAAO,CAAC,4BAA4B,CAAC,CAAC;QAiD1D;;WAEG;QACI,mBAAc,GAAS,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;QAEvD;;;WAGG;QACI,eAAU,GAAa,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QAEnD;;WAEG;QACI,aAAQ,GAAe,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAEjD;;;WAGG;QACI,sBAAiB,GAAM,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAO9D,CAAC;IA1EG;;;;OAIG;IACH,gCAAK,GAAL,UAAM,GAAe,EAAC,MAAuB;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAED;;;;;OAKG;IACH,kCAAO,GAAP,UAAQ,IAAI,EAAC,MAAuB;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAGD;;;;;OAKG;IACI,4CAAiB,GAAxB,UAAyB,KAAY;QACjC,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IACrC,CAAC;IAED;;;;OAIG;IACI,6CAAkB,GAAzB,UAA0B,KAAY;QAClC,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IACtC,CAAC;IAED;;;OAGG;IACI,8CAAmB,GAA1B,UAA2B,KAAY;QACnC,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IACvC,CAAC;IA6BL,uBAAC;AAAD,CA7EA,AA6EC;AANM,2BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,+BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AA5EW,4CAAgB","file":"papaparse.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { PapaParseConfig, PapaParseResult } from \"./papaparse.interface\";\n\n\n\nexport class PapaParseService {\n    private papa:any  = require('papaparse/papaparse.min.js');\n\n    /**\n     * Parse CSV to an array\n     * @param csv\n     * @param config\n     */\n    parse(csv:string|File,config?:PapaParseConfig): PapaParseResult {\n        return this.papa.parse(csv,config);\n    }\n\n    /**\n     * Convert an array into CSV\n     * @param data\n     * @param config\n     * @returns {string}\n     */\n    unparse(data,config?:PapaParseConfig): string {\n        return this.papa.unparse(data,config);\n    }\n\n\n    /**\n     * Set the size in bytes of each file chunk.\n     * Used when streaming files obtained from the DOM that\n     * exist on the local computer. Default 10 MB.\n     * @param value {number}\n     */\n    public setLocalChunkSize(value:number): void {\n        this.papa.LocalChunkSize = value;\n    }\n\n    /**\n     * Set the size in bytes of each remote file chunk.\n     * Used when streaming remote files. Default 5 MB.\n     * @param value {number}\n     */\n    public setRemoteChunkSize(value:number): void {\n        this.papa.RemoteChunkSize = value;\n    }\n\n    /**\n     * Set the delimiter used when it is left unspecified and cannot be detected automatically. Default is comma.\n     * @param value {string}\n     */\n    public setDefaultDelimiter(value:string): void {\n        this.papa.DefaultDelimiter = value;\n    }\n\n    /**\n     * An array of characters that are not allowed as delimiters.\n     */\n    public BAD_DELIMITERS       = this.papa.BAD_DELIMITERS;\n\n    /**\n     * The true delimiter. Invisible. ASCII code 30.\n     * Should be doing the job we strangely rely upon commas and tabs for.\n     */\n    public RECORD_SEP           = this.papa.RECORD_SEP;\n\n    /**\n     * Also sometimes used as a delimiting character. ASCII code 31.\n     */\n    public UNIT_SEP             = this.papa.UNIT_SEP;\n\n    /**\n     * Whether or not the browser supports HTML5 Web Workers.\n     * If false, worker: true will have no effect.\n     */\n    public WORKERS_SUPPORTED    = this.papa.WORKERS_SUPPORTED;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}