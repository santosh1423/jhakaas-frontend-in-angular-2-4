{"version":3,"sources":["../../src/lib/papaparseconfig.interface.ts"],"names":[],"mappings":";;AAmCA;;;IAGI","file":"papaparseconfig.interface.js","sourceRoot":"","sourcesContent":["export interface PapaParseResult {\n    data:string[],\n    errors:string[],\n    meta:any //todo\n}\n\nexport interface PapaParserParserÂ {\n\n}\n\n\n\nexport interface PapaParseConfig {\n    delimiter?: string | ((input?:string) => string),\n    newline?: string,\n    quoteChar?: string,\n    header?: boolean,\n    dynamicTyping?: boolean,\n    preview?: number,\n    encoding?: string,\n    worker?: boolean,\n    comments?: false,\n    step?: (results: PapaParseResult, parser) => void,        //todo: add types\n    complete?: (results: PapaParseResult, parser) => void,    //todo: add types\n    error?: any, // todo: Add function with parameters\n    download?: boolean,\n    skipEmptyLines?: boolean,\n    chunk?: (results: PapaParseResult, parser) => void, // todo\n    fastMode?: boolean,\n    beforeFirstChunk?: (a,b) => any, // todo: Add function with parameters\n    withCredentials?: boolean\n}\n\n\n\n/*\nlet config:PapaParseConfig = {\n    delimiter: (input) => {}\n};*/\n"]}